# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~

## Akka
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
akka {
  actor {
    default-dispatcher {
      # This will be used if you have set "executor = "fork-join-executor""
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8

        # The parallelism factor is used to determine thread pool size using the
        # following formula: ceil(available processors * factor). Resulting size
        # is then bounded by the parallelism-min and parallelism-max values.
        parallelism-factor = 32.0

        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 64

        # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
        # like peeking mode which "pop".
        task-peeking-mode = "FIFO"
      }
    }
  }
}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
#play.crypto.secret = "changeme"


## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# ~~~~~
play.i18n {
  # The application languages
  langs = [ "en" ]
}

## Play HTTP settings
# ~~~~~
play.http {
  ## Router
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  # Define the Router object to use for this application.
  # This router will be looked up first when the application is starting up,
  # so make sure this is the entry point.
  # Furthermore, it's assumed your route file is named properly.
  # So for an application router like `my.application.Router`,
  # you may need to define a router file `conf/my.application.routes`.
  # Default to Routes in the root package (aka "apps" folder) (and conf/routes)
  #router = my.application.Router
  #TO allow more data in request body
  parser.maxDiskBuffer=50MB
  parser.maxMemoryBuffer=50MB
}

## Netty Provider
# ~~~~~
play.server {

  netty {
    # The number of event loop threads. 0 means let Netty decide, which by default will select 2 times the number of
    # available processors.
    eventLoopThreads = 30

    # The transport to use, either jdk or native.
    # Native socket transport has higher performance and produces less garbage but are only available on linux
    transport = "native"

    # If you run Play on Linux, you can use Netty's native socket transport
    # for higher performance with less garbage.
    #transport = "native"
    maxChunkSize = 30000000
    option {

      # Set whether connections should use TCP keep alive
      child.keepAlive = true

      # Set whether the TCP no delay flag is set
      # child.tcpNoDelay = false

      # Set the size of the backlog of TCP connections.  The default and exact meaning of this parameter is JDK specific.
      # backlog = 100
    }

    http {
      # The idle timeout for an open connection after which it will be closed
      # Set to null or "infinite" to disable the timeout, but notice that this
      # is not encouraged since timeout are important mechanisms to protect your
      # servers from malicious attacks or programming mistakes.
      idleTimeout = infinite
    }
  }
}

## WS (HTTP Client)
# ~~~~~
libraryDependencies += javaWs 

## Cache
# https://www.playframework.com/documentation/latest/JavaCache
# https://www.playframework.com/documentation/latest/ScalaCache
# ~~~~~
# Play comes with an integrated cache API that can reduce the operational
# overhead of repeated requests. You must enable this by adding to build.sbt:
#
libraryDependencies += cache
#
play.cache {
  # If you want to bind several caches, you can bind the individually
  #bindCaches = ["db-cache", "user-cache", "session-cache"]
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
#logger.root=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
#logger.application=DEBUG

# APP Specific config
# ~~~~~
# Application specific configurations can be provided here
application.global=util.Global

play.http.filters=util.Filters
play.http.parser.maxMemoryBuffer = 900000K
play.http.parser.maxDiskBuffer = 900000K

SunbirdMWSystem {
  default-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 32.0
        parallelism-max = 64
    }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
  }
  rr-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 32.0
        parallelism-max = 64
    }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
  }
  rr-usr-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 8
        parallelism-factor = 32.0
        parallelism-max = 64
    }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
  }
  brr-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 2.0
        parallelism-max = 4
    }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
  }
  brr-usr-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 2.0
        parallelism-max = 4
    }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
  }
  page-mgr-actor-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 32.0
      parallelism-max = 64
    }
    # Throughput for default Dispatcher, set to 1 for as fair as possible
    throughput = 1
  }
  akka {
    actor {
      provider = "akka.actor.LocalActorRefProvider"
      serializers {
        java = "akka.serialization.JavaSerializer"
      }
      serialization-bindings {
        "org.sunbird.common.request.Request" = java
        "org.sunbird.common.models.response.Response" = java
      }
      default-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        fork-join-executor {
            parallelism-min = 1
            parallelism-factor = 2.0
            parallelism-max = 4
        }
          # Throughput for default Dispatcher, set to 1 for as fair as possible
          throughput = 1
      }
      deployment {
        /RequestRouter
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = rr-dispatcher
          }
        /BackgroundRequestRouter
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-dispatcher
          }
        "/BackgroundRequestRouter/*/BackgroundJobManager"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/EsSyncBackgroundActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/BackGroundServiceActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
       "/BackgroundRequestRouter/*/ChannelRegistrationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/TelemetryProcessorActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }  
        "/BackgroundRequestRouter/*/EmailServiceActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          }
        "/RequestRouter/*/EmailServiceActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/BulkUploadBackGroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 5
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/MetricsBackGroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 3
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/ActorAuditLogServiceImpl"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/OrganisationMetricsBackgroundActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/CourseMetricsBackgroundActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = brr-usr-dispatcher
          }  
        "/BackgroundRequestRouter/*/BadgeNotifier"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          }
        "/RequestRouter/*/UserManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserProfileReadActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserTypeActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/AddressManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/AddressManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserStatusActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/EducationManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/EducationManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserRoleActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/JobProfileManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/JobProfileManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/BackgroundUserDataEncryptionActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserDataEncryptionActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserExternalIdManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserExternalIdManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserOrgManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserOrgManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserOnboardingNotificationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserOnboardingNotificationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserBackgroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserBackgroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserProfileUpdateActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserProfileUpdateActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserLoginActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserProfileActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/ActorAuditLogServiceImpl"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/CourseEnrollmentActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/LearnerStateActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/LearnerStateUpdateActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/PageManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = page-mgr-actor-dispatcher
          }
        "/RequestRouter/*/OrganisationManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/RecommendorActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/CourseSearchActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          } 
        "/RequestRouter/*/AssessmentItemActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/SearchHandlerActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          } 
        "/RequestRouter/*/BulkUploadManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          } 
        "/RequestRouter/*/CourseBatchManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/CourseBatchNotificationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          } 
        "/RequestRouter/*/CourseBatchNotificationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/EsSyncActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          } 
        "/RequestRouter/*/FileUploadServiceActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/NotesManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/SchedularActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/OrganisationMetricsActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/CourseMetricsActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserSkillManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/TenantPreferenceManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/ClientManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/GeoLocationManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/KeyCloakSyncActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/DbOperationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/BadgeIssuerActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/BadgeClassActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/BadgeAssertionActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/BadgeAssociationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserBadgeAssertion"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/LeanerStateUpdateBackGroundActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
        "/RequestRouter/*/HealthActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 3
            dispatcher = rr-usr-dispatcher
          } 
         "/RequestRouter/*/TelemetryActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 4
            dispatcher = rr-usr-dispatcher
          }
         "/RequestRouter/*/LocationActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
         "/BackgroundRequestRouter/*/LocationBackgroundActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
        "/RequestRouter/*/LocationBulkUploadActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/OrgBulkUploadActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserBulkUploadActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/SystemSettingsActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/UserTnCActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/LocationBulkUploadBackGroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/OrgBulkUploadBackgroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/UserBulkUploadBackgroundJobActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = brr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/ThreadDumpActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 1
            dispatcher = brr-usr-dispatcher
          }
        "/RequestRouter/*/TextbookTocActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/RequestRouter/*/OTPActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
        "/BackgroundRequestRouter/*/SendOTPActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
          "/RequestRouter/*/CacheManagementActor"
          {
            router = smallest-mailbox-pool
            nr-of-instances = 2 
            dispatcher = rr-usr-dispatcher
          }  
      }
    }
    remote {
      maximum-payload-bytes = 30000000 bytes
      netty.tcp {
        port = 8088
        message-frame-size =  30000000b
        send-buffer-size =  30000000b
        receive-buffer-size =  30000000b
        maximum-frame-size = 30000000b
      }
    }
  }
}